{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T12:23:30.763Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T12:30:40.492Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:12:52.161Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:12:52.559Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:13:03.218Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:13:03.526Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":3,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":12421,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":false,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":false,"headers":{"host":"localhost:8080","connection":"keep-alive","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8","cookie":"connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Upgrade-Insecure-Requests","1","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8","Cookie","connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/api","method":"GET","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/api","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/api","path":"/api","href":"/api","_raw":"/api"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     _idleStart: 12421,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 59,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 61,\n     [Symbol(triggerAsyncId)]: 59 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     _idleStart: 12421,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 59,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 61,\n     [Symbol(triggerAsyncId)]: 59 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'upgrade-insecure-requests': '1',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n     cookie: 'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Upgrade-Insecure-Requests',\n     '1',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Accept',\n     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8',\n     'Cookie',\n     'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/api',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     _idleStart: 12421,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 59,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 61,\n     [Symbol(triggerAsyncId)]: 59 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/api',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/api',\n     path: '/api',\n     href: '/api',\n     _raw: '/api' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [Socket],\n        _idleStart: 12421,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 59,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 61,\n        [Symbol(triggerAsyncId)]: 59 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [Socket],\n        _idleStart: 12421,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 59,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 61,\n        [Symbol(triggerAsyncId)]: 59 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:13:15.487Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":3,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":12457,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":true,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":true,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":true,"headers":{"host":"localhost:8080","connection":"keep-alive","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8","cookie":"connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Upgrade-Insecure-Requests","1","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8","Cookie","connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/api","method":"GET","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/api","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/api","path":"/api","href":"/api","_raw":"/api"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"error","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: true,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: true,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 70,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 71,\n        [Symbol(triggerAsyncId)]: 70 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 12457,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 59,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 61,\n     [Symbol(triggerAsyncId)]: 59 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 70,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 71,\n        [Symbol(triggerAsyncId)]: 70 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 12457,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 59,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 61,\n     [Symbol(triggerAsyncId)]: 59 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'upgrade-insecure-requests': '1',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n     cookie: 'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Upgrade-Insecure-Requests',\n     '1',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Accept',\n     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8',\n     'Cookie',\n     'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/api',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 70,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 71,\n        [Symbol(triggerAsyncId)]: 70 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 12457,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 59,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 61,\n     [Symbol(triggerAsyncId)]: 59 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/api',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/api',\n     path: '/api',\n     href: '/api',\n     _raw: '/api' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [TimersList],\n        _idleStart: 12457,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 59,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 61,\n        [Symbol(triggerAsyncId)]: 59 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [TimersList],\n        _idleStart: 12457,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 59,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 61,\n        [Symbol(triggerAsyncId)]: 59 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:13:15.516Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":3,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":18201,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":false,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":false,"headers":{"host":"localhost:8080","connection":"keep-alive","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8","cookie":"connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Upgrade-Insecure-Requests","1","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8","Cookie","connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/api/","method":"GET","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/api/","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/api/","path":"/api/","href":"/api/","_raw":"/api/"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 70,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 71,\n        [Symbol(triggerAsyncId)]: 70 },\n     _idleStart: 12422,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 65,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 66,\n     [Symbol(triggerAsyncId)]: 65 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 70,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 71,\n        [Symbol(triggerAsyncId)]: 70 },\n     _idleStart: 12422,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 65,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 66,\n     [Symbol(triggerAsyncId)]: 65 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'upgrade-insecure-requests': '1',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n     cookie: 'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Upgrade-Insecure-Requests',\n     '1',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Accept',\n     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8',\n     'Cookie',\n     'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/api/',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 70,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 71,\n        [Symbol(triggerAsyncId)]: 70 },\n     _idleStart: 12422,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 65,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 66,\n     [Symbol(triggerAsyncId)]: 65 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/api/',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/api/',\n     path: '/api/',\n     href: '/api/',\n     _raw: '/api/' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [Socket],\n        _idleStart: 12422,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:13:21.258Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":3,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":12422,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"]"},"_idleStart":18201,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":18228,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":true,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":true,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":true,"headers":{"host":"localhost:8080","connection":"keep-alive","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8","cookie":"connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Upgrade-Insecure-Requests","1","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8","Cookie","connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703"],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/api/","method":"GET","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/api/","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/api/","path":"/api/","href":"/api/","_raw":"/api/"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"error","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: true,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: true,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _idleStart: 18201,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 100,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 101,\n        [Symbol(triggerAsyncId)]: 100 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 18228,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 65,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 66,\n     [Symbol(triggerAsyncId)]: 65 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _idleStart: 18201,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 100,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 101,\n        [Symbol(triggerAsyncId)]: 100 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 18228,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 65,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 66,\n     [Symbol(triggerAsyncId)]: 65 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'upgrade-insecure-requests': '1',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n     cookie: 'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Upgrade-Insecure-Requests',\n     '1',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Accept',\n     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8',\n     'Cookie',\n     'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/api/',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 3,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _idleStart: 18201,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 100,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 101,\n        [Symbol(triggerAsyncId)]: 100 },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Socket],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 18228,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 65,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 66,\n     [Symbol(triggerAsyncId)]: 65 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/api/',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/api/',\n     path: '/api/',\n     href: '/api/',\n     _raw: '/api/' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [TimersList],\n        _idleStart: 18228,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Socket],\n        _idlePrev: [TimersList],\n        _idleStart: 18228,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 65,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 66,\n        [Symbol(triggerAsyncId)]: 65 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:13:21.282Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":2,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"$ref":"$[\"socket\"][\"server\"]"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":24760,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"incoming":null,"outgoing":null,"maxHeaderPairs":2000},"_paused":false},"_idlePrev":{"$ref":"$[\"socket\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"][\"_idleNext\"]"},"_idleStart":18201,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":false,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":false,"headers":{"host":"localhost:8080","connection":"keep-alive","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8","cookie":"connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703","if-none-match":"W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\""},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Upgrade-Insecure-Requests","1","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8","Cookie","connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703","If-None-Match","W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\""],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/","method":"GET","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/","path":"/","href":"/","_raw":"/"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [TimersList],\n        _idleStart: 24760,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 130,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 131,\n        [Symbol(triggerAsyncId)]: 130 },\n     _idleStart: 18201,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 100,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 101,\n     [Symbol(triggerAsyncId)]: 100 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [TimersList],\n        _idleStart: 24760,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 130,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 131,\n        [Symbol(triggerAsyncId)]: 130 },\n     _idleStart: 18201,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 100,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 101,\n     [Symbol(triggerAsyncId)]: 100 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'upgrade-insecure-requests': '1',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n     cookie: 'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703',\n     'if-none-match': 'W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\"' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Upgrade-Insecure-Requests',\n     '1',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Accept',\n     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8',\n     'Cookie',\n     'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703',\n     'If-None-Match',\n     'W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\"' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 2,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Socket],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [Circular],\n        _idlePrev: [TimersList],\n        _idleStart: 24760,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        [Symbol(asyncId)]: 130,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 131,\n        [Symbol(triggerAsyncId)]: 130 },\n     _idleStart: 18201,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 100,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 101,\n     [Symbol(triggerAsyncId)]: 100 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/',\n     path: '/',\n     href: '/',\n     _raw: '/' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [Socket],\n        _idleStart: 18201,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 100,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 101,\n        [Symbol(triggerAsyncId)]: 100 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [Socket],\n        _idleStart: 18201,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 100,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 101,\n        [Symbol(triggerAsyncId)]: 100 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:13:27.818Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:14:12.899Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:14:13.118Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":1,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":7525,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":false,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":false,"headers":{"host":"localhost:8080","connection":"keep-alive","cache-control":"max-age=0","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8","cookie":"connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703","if-none-match":"W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\""},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Cache-Control","max-age=0","Upgrade-Insecure-Requests","1","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8","Cookie","connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703","If-None-Match","W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\""],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/","method":"GET","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/","path":"/","href":"/","_raw":"/"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"info","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 7525,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 51,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 53,\n     [Symbol(triggerAsyncId)]: 51 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 7525,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 51,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 53,\n     [Symbol(triggerAsyncId)]: 51 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'cache-control': 'max-age=0',\n     'upgrade-insecure-requests': '1',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n     cookie: 'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703',\n     'if-none-match': 'W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\"' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Cache-Control',\n     'max-age=0',\n     'Upgrade-Insecure-Requests',\n     '1',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Accept',\n     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8',\n     'Cookie',\n     'connect.sid=s%3AVYqS6kvVyztz5yVVINxxqsLhT6f7O4oF.DMzgN9h%2FM2Tdx0xUwS4HuBW8Yw1V3W11VjVUtTTRNys; _ga=GA1.1.1133175490.1526992703; _gid=GA1.1.2115916774.1526992703',\n     'If-None-Match',\n     'W/\"e-BiSpDb485bDLqzv3ha63FZS1NY0\"' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/',\n  method: 'GET',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 7525,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 51,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 53,\n     [Symbol(triggerAsyncId)]: 51 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/',\n     path: '/',\n     href: '/',\n     _raw: '/' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [TimersList],\n        _idleStart: 7525,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 51,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 53,\n        [Symbol(triggerAsyncId)]: 51 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [TimersList],\n        _idleStart: 7525,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 51,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 53,\n        [Symbol(triggerAsyncId)]: 51 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:14:20.284Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:15:31.387Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:15:31.616Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:17:14.007Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:17:14.436Z"}
{"_events":{},"_eventsCount":1,"output":[],"outputEncodings":[],"outputCallbacks":[],"outputSize":0,"writable":true,"_last":false,"upgrading":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":{"connecting":false,"_hadError":false,"_handle":{"reading":true,"owner":{"$ref":"$[\"socket\"]"},"onconnection":null,"_consumed":true},"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"drain":[null,null],"close":[null,null]},"_eventsCount":10,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_bytesDispatched":0,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":4,"_connections":1,"_handle":{"reading":false,"owner":{"$ref":"$[\"socket\"][\"server\"]"},"onread":null},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"_pendingResponseData":0,"maxHeadersCount":null,"_connectionKey":"6::::8080"},"_server":{"$ref":"$[\"socket\"][\"server\"]"},"_idleTimeout":120000,"_idleNext":{"_idleNext":{"$ref":"$[\"socket\"]"},"_idlePrev":{"$ref":"$[\"socket\"]"},"_unrefed":true,"msecs":120000,"nextTick":false,"_timer":{"_list":{"$ref":"$[\"socket\"][\"_idleNext\"]"}}},"_idlePrev":{"$ref":"$[\"socket\"][\"_idleNext\"]"},"_idleStart":785380,"_destroyed":false,"parser":{"_headers":[],"_url":"","_consumed":true,"socket":{"$ref":"$[\"socket\"]"},"incoming":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":null,"ended":false,"endEmitted":false,"reading":false,"sync":true,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrain":0,"readingMore":true,"decoder":null,"encoding":null},"readable":true,"_events":{},"_eventsCount":0,"socket":{"$ref":"$[\"socket\"]"},"connection":{"$ref":"$[\"socket\"]"},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":false,"headers":{"host":"localhost:8080","connection":"keep-alive","content-length":"17","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","cache-control":"no-cache","origin":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","postman-token":"9edd263f-a75d-88d1-2ea5-90958e7057e3","content-type":"text/plain;charset=UTF-8","accept":"*/*","accept-encoding":"gzip, deflate, br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"},"rawHeaders":["Host","localhost:8080","Connection","keep-alive","Content-Length","17","User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36","Cache-Control","no-cache","Origin","chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","Postman-Token","9edd263f-a75d-88d1-2ea5-90958e7057e3","Content-Type","text/plain;charset=UTF-8","Accept","*/*","Accept-Encoding","gzip, deflate, br","Accept-Language","en-GB,en-US;q=0.9,en;q=0.8"],"trailers":{},"rawTrailers":[],"upgrade":false,"url":"/project","method":"POST","statusCode":null,"statusMessage":null,"client":{"$ref":"$[\"socket\"]"},"_consuming":false,"_dumped":false,"baseUrl":"","originalUrl":"/project","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/project","path":"/project","href":"/project","_raw":"/project"},"params":{},"query":{},"res":{"$ref":"$"},"body":{}},"outgoing":null,"maxHeaderPairs":2000},"_paused":false,"_httpMessage":{"$ref":"$"}},"connection":{"$ref":"$[\"socket\"]"},"_header":null,"_sent100":false,"_expect_continue":false,"req":{"$ref":"$[\"socket\"][\"parser\"][\"incoming\"]"},"locals":{},"level":"error","message":"IncomingMessage {\n  _readableState: \n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: null,\n     ended: false,\n     endEmitted: false,\n     reading: false,\n     sync: true,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: true,\n     decoder: null,\n     encoding: null },\n  readable: true,\n  _events: {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 785380,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 1333,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 1335,\n     [Symbol(triggerAsyncId)]: 1333 },\n  connection: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 785380,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 1333,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 1335,\n     [Symbol(triggerAsyncId)]: 1333 },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers: \n   { host: 'localhost:8080',\n     connection: 'keep-alive',\n     'content-length': '17',\n     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'cache-control': 'no-cache',\n     origin: 'chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop',\n     'postman-token': '9edd263f-a75d-88d1-2ea5-90958e7057e3',\n     'content-type': 'text/plain;charset=UTF-8',\n     accept: '*/*',\n     'accept-encoding': 'gzip, deflate, br',\n     'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8' },\n  rawHeaders: \n   [ 'Host',\n     'localhost:8080',\n     'Connection',\n     'keep-alive',\n     'Content-Length',\n     '17',\n     'User-Agent',\n     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',\n     'Cache-Control',\n     'no-cache',\n     'Origin',\n     'chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop',\n     'Postman-Token',\n     '9edd263f-a75d-88d1-2ea5-90958e7057e3',\n     'Content-Type',\n     'text/plain;charset=UTF-8',\n     'Accept',\n     '*/*',\n     'Accept-Encoding',\n     'gzip, deflate, br',\n     'Accept-Language',\n     'en-GB,en-US;q=0.9,en;q=0.8' ],\n  trailers: {},\n  rawTrailers: [],\n  upgrade: false,\n  url: '/project',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: \n   Socket {\n     connecting: false,\n     _hadError: false,\n     _handle: \n      TCP {\n        reading: true,\n        owner: [Circular],\n        onread: [Function: onread],\n        onconnection: null,\n        _consumed: true },\n     _parent: null,\n     _host: null,\n     _readableState: \n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: [BufferList],\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        destroyed: false,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: true,\n     _events: \n      { end: [Array],\n        finish: [Function: onSocketFinish],\n        _socketEnd: [Function: onSocketEnd],\n        drain: [Array],\n        timeout: [Function: socketOnTimeout],\n        data: [Function: bound socketOnData],\n        error: [Function: socketOnError],\n        close: [Array],\n        resume: [Function: onSocketResume],\n        pause: [Function: onSocketPause] },\n     _eventsCount: 10,\n     _maxListeners: undefined,\n     _writableState: \n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: false,\n        needDrain: false,\n        ending: false,\n        ended: false,\n        finished: false,\n        destroyed: false,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: true,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: false,\n        errorEmitted: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: true,\n     allowHalfOpen: true,\n     _bytesDispatched: 0,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _server: \n      Server {\n        _events: [Object],\n        _eventsCount: 4,\n        _maxListeners: undefined,\n        _connections: 1,\n        _handle: [TCP],\n        _usingWorkers: false,\n        _workers: [],\n        _unref: false,\n        allowHalfOpen: true,\n        pauseOnConnect: false,\n        httpAllowHalfOpen: false,\n        timeout: 120000,\n        keepAliveTimeout: 5000,\n        _pendingResponseData: 0,\n        maxHeadersCount: null,\n        _connectionKey: '6::::8080',\n        [Symbol(IncomingMessage)]: [Function],\n        [Symbol(ServerResponse)]: [Function],\n        [Symbol(asyncId)]: 40 },\n     _idleTimeout: 120000,\n     _idleNext: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idlePrev: \n      TimersList {\n        _idleNext: [Circular],\n        _idlePrev: [Circular],\n        _unrefed: true,\n        msecs: 120000,\n        nextTick: false,\n        _timer: [Timer] },\n     _idleStart: 785380,\n     _destroyed: false,\n     parser: \n      HTTPParser {\n        '0': [Function: parserOnHeaders],\n        '1': [Function: parserOnHeadersComplete],\n        '2': [Function: parserOnBody],\n        '3': [Function: parserOnMessageComplete],\n        '4': [Function: bound onParserExecute],\n        _headers: [],\n        _url: '',\n        _consumed: true,\n        socket: [Circular],\n        incoming: [Circular],\n        outgoing: null,\n        maxHeaderPairs: 2000,\n        onIncoming: [Function: bound parserOnIncoming] },\n     on: [Function: socketOnWrap],\n     _paused: false,\n     _httpMessage: \n      ServerResponse {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: false,\n        upgrading: false,\n        chunkedEncoding: false,\n        shouldKeepAlive: true,\n        useChunkedEncodingByDefault: true,\n        sendDate: true,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: null,\n        _hasBody: true,\n        _trailer: '',\n        finished: false,\n        _headerSent: false,\n        socket: [Circular],\n        connection: [Circular],\n        _header: null,\n        _onPendingData: [Function: bound updateOutgoingData],\n        _sent100: false,\n        _expect_continue: false,\n        req: [Circular],\n        locals: {},\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     [Symbol(asyncId)]: 1333,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(bytesRead)]: 0,\n     [Symbol(asyncId)]: 1335,\n     [Symbol(triggerAsyncId)]: 1333 },\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/project',\n  _parsedUrl: \n   Url {\n     protocol: null,\n     slashes: null,\n     auth: null,\n     host: null,\n     port: null,\n     hostname: null,\n     hash: null,\n     search: null,\n     query: null,\n     pathname: '/project',\n     path: '/project',\n     href: '/project',\n     _raw: '/project' },\n  params: {},\n  query: {},\n  res: \n   ServerResponse {\n     _events: { finish: [Function: bound resOnFinish] },\n     _eventsCount: 1,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: false,\n     upgrading: false,\n     chunkedEncoding: false,\n     shouldKeepAlive: true,\n     useChunkedEncodingByDefault: true,\n     sendDate: true,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: null,\n     _hasBody: true,\n     _trailer: '',\n     finished: false,\n     _headerSent: false,\n     socket: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [TimersList],\n        _idleStart: 785380,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 1333,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 1335,\n        [Symbol(triggerAsyncId)]: 1333 },\n     connection: \n      Socket {\n        connecting: false,\n        _hadError: false,\n        _handle: [TCP],\n        _parent: null,\n        _host: null,\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 10,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _bytesDispatched: 0,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: [Server],\n        _server: [Server],\n        _idleTimeout: 120000,\n        _idleNext: [TimersList],\n        _idlePrev: [TimersList],\n        _idleStart: 785380,\n        _destroyed: false,\n        parser: [HTTPParser],\n        on: [Function: socketOnWrap],\n        _paused: false,\n        _httpMessage: [Circular],\n        [Symbol(asyncId)]: 1333,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(bytesRead)]: 0,\n        [Symbol(asyncId)]: 1335,\n        [Symbol(triggerAsyncId)]: 1333 },\n     _header: null,\n     _onPendingData: [Function: bound updateOutgoingData],\n     _sent100: false,\n     _expect_continue: false,\n     req: [Circular],\n     locals: {},\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]: \n      { 'x-powered-by': [Array],\n        'access-control-allow-origin': [Array] } },\n  body: {} }","timestamp":"2018-05-22T13:30:19.181Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:31:03.723Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:31:04.190Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:42:45.508Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:42:45.916Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-22T13:49:25.148Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-22T13:49:25.528Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T07:32:27.850Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T07:32:28.230Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T07:36:31.478Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T07:36:31.870Z"}
{"message":"Cannot read property 'data' of undefined","stack":"TypeError: Cannot read property 'data' of undefined\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/build/dist/server/handlers/project_handler.js:17:53\n    at new Promise (<anonymous>)\n    at ProjectHandler.create (/Users/nicolaasvercuiel/repos/ixo-explorer/build/dist/server/handlers/project_handler.js:15:20)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/build/dist/server/routers/abstract_router.js:17:17\n    at new Promise (<anonymous>)\n    at PromiseServer.config.(anonymous function) (/Users/nicolaasvercuiel/repos/ixo-explorer/build/dist/server/routers/abstract_router.js:16:20)\n    at module.exports.Method.execute (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/jayson/lib/method.js:123:20)\n    at module.exports.PromiseMethod.execute (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/jayson/promise/lib/method.js:31:49)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/jayson/lib/server/index.js:295:12\n    at maybeParse (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/jayson/lib/server/index.js:418:5)\n    at PromiseServer.Server.call (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/jayson/lib/server/index.js:231:3)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/jayson/lib/server/middleware.js:34:12\n    at Layer.handle [as handle_request] (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/express/lib/router/route.js:112:3)\n    at Layer.handle [as handle_request] (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/express/lib/router/layer.js:95:5)","level":"error","timestamp":"2018-05-23T07:39:12.302Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T07:40:40.084Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T07:40:40.284Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T07:40:49.888Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T07:40:50.094Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T08:25:15.247Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T08:25:15.688Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T08:32:28.416Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T08:32:28.807Z"}
{"message":"Project validation failed: serviceURI: Path `serviceURI` is required., impactsRequired: Path `impactsRequired` is required., country: Path `country` is required., createdOn: Path `createdOn` is required., impactAction: Path `impactAction` is required., shortDescription: Path `shortDescription` is required., title: Path `title` is required., pubKey: Path `pubKey` is required.","errors":{"serviceURI":{"message":"Path `serviceURI` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"serviceURI"},"kind":"required","path":"serviceURI","$isValidatorError":true},"impactsRequired":{"message":"Path `impactsRequired` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"impactsRequired"},"kind":"required","path":"impactsRequired","$isValidatorError":true},"country":{"message":"Path `country` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"country"},"kind":"required","path":"country","$isValidatorError":true},"createdOn":{"message":"Path `createdOn` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"createdOn"},"kind":"required","path":"createdOn","$isValidatorError":true},"impactAction":{"message":"Path `impactAction` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"impactAction"},"kind":"required","path":"impactAction","$isValidatorError":true},"shortDescription":{"message":"Path `shortDescription` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"shortDescription"},"kind":"required","path":"shortDescription","$isValidatorError":true},"title":{"message":"Path `title` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"title"},"kind":"required","path":"title","$isValidatorError":true},"pubKey":{"message":"Path `pubKey` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"pubKey"},"kind":"required","path":"pubKey","$isValidatorError":true}},"_message":"Project validation failed","stack":"ValidationError: Project validation failed: serviceURI: Path `serviceURI` is required., impactsRequired: Path `impactsRequired` is required., country: Path `country` is required., createdOn: Path `createdOn` is required., impactAction: Path `impactAction` is required., shortDescription: Path `shortDescription` is required., title: Path `title` is required., pubKey: Path `pubKey` is required.\n    at new ValidationError (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/lib/error/validation.js:27:11)\n    at model.Document.invalidate (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/lib/document.js:1832:32)\n    at p.doValidate.skipSchemaValidators (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/lib/document.js:1700:17)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/lib/schematype.js:808:9\n    at process._tickCallback (internal/process/next_tick.js:112:11)","name":"ValidationError","level":"error","timestamp":"2018-05-23T08:32:35.984Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T08:33:14.573Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T08:33:14.794Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T08:34:07.596Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T08:34:07.962Z"}
{"message":"E11000 duplicate key error collection: admin.projects index: did_1 dup key: { : \"sdfsdfwe34234245345\" }","name":"MongoError","driver":true,"stack":"MongoError: E11000 duplicate key error collection: admin.projects index: did_1 dup key: { : \"sdfsdfwe34234245345\" }\n    at Function.MongoError.create (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/error.js:45:10)\n    at toError (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/utils.js:149:22)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/collection.js:696:39\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/connection/pool.js:544:18\n    at process._tickCallback (internal/process/next_tick.js:112:11)","index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: admin.projects index: did_1 dup key: { : \"sdfsdfwe34234245345\" }","level":"error","timestamp":"2018-05-23T08:34:10.436Z"}
{"level":"debug","message":"Logging initialized at debug level","timestamp":"2018-05-23T09:03:59.382Z"}
{"level":"debug","message":"Using .env file to supply config environment variables","timestamp":"2018-05-23T09:03:59.819Z"}
{"message":"E11000 duplicate key error collection: admin.projects index: did_1 dup key: { : \"sdfsdfwe34234245345\" }","name":"MongoError","driver":true,"stack":"MongoError: E11000 duplicate key error collection: admin.projects index: did_1 dup key: { : \"sdfsdfwe34234245345\" }\n    at Function.MongoError.create (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/error.js:45:10)\n    at toError (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/utils.js:149:22)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/collection.js:696:39\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/connection/pool.js:544:18\n    at process._tickCallback (internal/process/next_tick.js:112:11)","index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: admin.projects index: did_1 dup key: { : \"sdfsdfwe34234245345\" }","level":"error","timestamp":"2018-05-23T09:04:06.286Z"}
{"message":"E11000 duplicate key error collection: admin.projects index: pubKey_1 dup key: { : \"45345werwer23424\" }","name":"MongoError","driver":true,"stack":"MongoError: E11000 duplicate key error collection: admin.projects index: pubKey_1 dup key: { : \"45345werwer23424\" }\n    at Function.MongoError.create (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/error.js:45:10)\n    at toError (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/utils.js:149:22)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/collection.js:696:39\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/connection/pool.js:544:18\n    at process._tickCallback (internal/process/next_tick.js:112:11)","index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: admin.projects index: pubKey_1 dup key: { : \"45345werwer23424\" }","level":"error","timestamp":"2018-05-23T09:04:19.734Z"}
{"message":"E11000 duplicate key error collection: admin.projects index: createdBy_1 dup key: { : \"sdfsdfwe34234245345\" }","name":"MongoError","driver":true,"stack":"MongoError: E11000 duplicate key error collection: admin.projects index: createdBy_1 dup key: { : \"sdfsdfwe34234245345\" }\n    at Function.MongoError.create (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/error.js:45:10)\n    at toError (/Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/utils.js:149:22)\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb/lib/collection.js:696:39\n    at /Users/nicolaasvercuiel/repos/ixo-explorer/node_modules/mongoose/node_modules/mongodb-core/lib/connection/pool.js:544:18\n    at process._tickCallback (internal/process/next_tick.js:112:11)","index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: admin.projects index: createdBy_1 dup key: { : \"sdfsdfwe34234245345\" }","level":"error","timestamp":"2018-05-23T09:04:25.585Z"}
